services:
    web:
        build:
            dockerfile_inline: |
                FROM php:8.3-fpm-alpine3.21
                ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/
                RUN chmod +x /usr/local/bin/install-php-extensions
                RUN install-php-extensions @composer bcmath pdo_mysql gd pcov zip intl pcntl
                CMD php artisan serve --host=0.0.0.0 --port=8000
                RUN cat <<EOF > /usr/local/etc/php/php.ini
                    file_uploads = On
                    max_execution_time = 90
                    max_file_uploads = 5
                    post_max_size = 12M
                    upload_max_filesize = 12M
                EOF
        container_name: web
        working_dir: /var/www/html
        ports:
            - 8000:8000
        volumes:
            - .:/var/www/html
        depends_on:
            db:
                condition: service_healthy

    db:
        build:
            dockerfile_inline: |
                FROM mysql:8.1
                RUN echo "CREATE DATABASE testing;" > /docker-entrypoint-initdb.d/init.sql
        container_name: db
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        ports:
            - 3306:3306
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", '-uroot', '-ppassword' ]
            interval: 3s
            timeout: 5s
            retries: 30

    node:
        build:
            dockerfile_inline: |
                FROM node:22
                CMD npm run dev
        container_name: node
        user: root
        ports:
            - 5173:5173
        working_dir: /src
        volumes:
            - ./:/src

volumes:
    db-data:
